<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
#################PROVISIONER.NET#################
# This Configuration file was generated from the Provisioner.net Library by {$provisioner_processor_info}
# Generated on: {$provisioner_generated_timestamp}
# 
# Provisioner Information Follows:
# Brand Revision Timestamp: {$provisioner_brand_timestamp}
# Family Revision Timestamp: {$provisioner_family_timestamp}
#
##################################################
-->
<phone1>
    {% set x = 1 %}
    {% for line in lines %}
    <reg
      reg.{{ x }}.displayName="{{ line.display_name }}"
      reg.{{ x }}.address="{{ line.username }}"
      reg.{{ x }}.label="{{ line.display_name }}"
      reg.{{ x }}.type="{{ line.type|default('private') }}"
      reg.{{ x }}.thirdPartyName="{{ line.display_name }}"
      reg.{{ x }}.auth.userId="{{ line.auth_name }}"
      reg.{{ x }}.auth.password="{{ line.auth_password }}"

      reg.{{ x }}.server.1.address="{{ line.sip_server.primary.host }}"
      reg.{{ x }}.server.1.port="{{ line.sip_server.primary.port }}"
      reg.{{ x }}.server.1.transport="{{ line.sip_server.1.transport|default('DNSnaptr') }}"
      reg.{{ x }}.server.1.expires="{{ line.expire }}"

      reg.{{ x }}.outboundProxy.address="{{ line.outbound_proxy.primary.host }}"
      reg.{{ x }}.outboundProxy.port="{{ line.outbound_proxy.primary.port }}"
      reg.{{ x }}.outboundProxy.transport="{{ line.outbound_proxy.transport|default('UDPOnly') }}"
      reg.{{ x }}.ringType="{{ line.ringtype|default('2') }}"
      reg.{{ x }}.lineKeys="{{ line.linekeys }}"/>

    <call>
      <autoOffHook
        call.autoOffHook.{{ x }}.enabled="{{ hotline.enable|default('0') }}"
        call.autoOffHook.{{ x }}.contact="{{ hotline.number }}" />
      <missedCallTracking call.missedCallTracking.{{ x }}.enabled="{{ line.call.missedCallTracking|default('1') }}" />
      <serverMissedCall call.serverMissedCall.{{ x }}.enabled="{{ line.call.serverMissedCall|default('0') }}" />
      <callWaiting call.callWaiting.ring="{{ line.call.callWaiting_ring|default('beep') }}"/>
    </call>

    <divert
      divert.{{ x }}.contact="{{ line.divert.contact }}"
      divert.{{ x }}.autoOnSpecificCaller="{{ line.divert.autoOnSpecificCaller|default('1') }}"
      divert.{{ x }}.sharedDisabled="{{ line.divert.shareDisabled|default('1') }}">
      <fwd divert.fwd.{{ x }}.enabled="{{ line.divert.forward|default('1') }}"/>
      <busy
        divert.busy.{{ x }}.enabled="{{ line.divert.busy.enable|default('0') }}"
        divert.busy.{{ x }}.contact="{{ line.divert.busy.contact }}"/>
      <noanswer
        divert.noanswer.{{ x }}.enabled="{{ line.divert.noanswer.enable|default('0') }}"
        divert.noanswer.{{ x }}.timeout="{{ line.divert.noanswer.timeout|default('60') }}"
        divert.noanswer.{{ x }}.contact="{{ line.divert.noanswer.contact }}"/>
      <dnd
        divert.dnd.{{ x }}.enabled="{{ line.divert.dnd.enable|default('0') }}"
        divert.dnd.{{ x }}.contact="{{ line.divert.dnd.contact }}"/>
    </divert>

    <device>
      <device.auth device.auth.localUserPassword="">
        <device.auth.localUserPassword device.auth.localUserPassword.set="0">
        </device.auth.localUserPassword>
      </device.auth>
      <device.sntp device.sntp.gmtOffset="{{ timezone }}" device.sntp.serverName="{{ ntp_server.primary|default('pool.ntp.org') }}">
        <device.sntp.gmtOffset device.sntp.gmtOffset.set="1">
        </device.sntp.gmtOffset>
        <device.sntp.serverName device.sntp.serverName.set="1">
        </device.sntp.serverName>
      </device.sntp>
      <device.em device.em.power="">
        <device.em.power device.em.power.set="0">
        </device.em.power>
      </device.em>
    </device>

    <dialplan
      dialplan.{{ x }}.impossibleMatchHandling="{{ line.dialplan.impossibleMatchHandling|default('0') }}"
      dialplan.{{ x }}.removeEndOfDial="{{ line.dialplan.removeEndOfDial|default('1') }}"
      dialplan.{{ x }}.applyToUserSend="{{ line.dialplan.applyToUserSend|default('1') }}"
      dialplan.{{ x }}.applyToUserDial="{{ line.dialplan.applyToUserDial|default('1') }}"
      dialplan.{{ x }}.applyToCallListDial="{{ line.dialplan.applyToCallListDial|default('0') }}"
      dialplan.{{ x }}.applyToDirectoryDial="{{ line.dialplan.applyToDirectoryDial|default('0') }}">
      <digitmap dialplan.digitmap="{{ line.dialplan.digitmap.digitmap|default('*xxT|xxxxT|[2-9]11|0T|011xxx.T|[1][2-9]xxxxxxxxx|[2-9]xxxxxxxxx|[2-9]xxxT') }}" dialplan.digitmap.timeOut="3"/>
      <routing>
          <server
        dialplan.{{ x }}.routing.server.{{ x }}.address="{{ line.dialplan.routing.server.address }}"
        dialplan.{{ x }}.routing.server.{{ x }}.port="{{ line.dialplan.routing.server.port }}"/>
          <emergency
        dialplan.{{ x }}.routing.emergency.{{ x }}.value="{{ line.dialplan.routing.emergency.value }}"
        dialplan.{{ x }}.routing.emergency.{{ x }}.server.1="{{ line.dialplan.routing.emergency.server }}"/>
      </routing>
    </dialplan>

    <msg msg.bypassInstantMessage="{{ line.msg.bypassInstantMessage|default('1') }}">
      <mwi
        msg.mwi.{{ x }}.subscribe="{{ line.msg.wmi.subscribe }}"
        msg.mwi.{{ x }}.callBackMode="{{ line.msg.mwi.callBackMode|default('contact') }}"
        msg.mwi.{{ x }}.callBack="{{ line.voicemail_number|default('*97') }}"/>
    </msg>
    {% set x = x + 1 %}
    {% endfor %}

	<microbrowser mb.proxy="" mb.ssawc.call.mode="" mb.ssawc.enabled="" mb.launchpad.enabled="1">

	<main 
		mb.main.home="{{ line.microbrowser.main.home }}"
		mb.main.idleTimeout=""
		mb.main.statusbar=""
		mb.main.1.url=""
		mb.main.1.icon=""
		mb.main.1.text=""
		mb.main.2.url=""
		mb.main.2.icon=""
		mb.main.2.text=""
		mb.main.3.url=""
		mb.main.3.icon=""
		mb.main.3.text=""
		mb.main.4.url=""
		mb.main.4.icon="" 
		mb.main.4.text=""
		mb.main.5.url=""
		mb.main.5.icon=""
		mb.main.5.text=""
		mb.main.6.url=""
		mb.main.6.icon=""
		mb.main.6.text=""
	/>

	<idleDisplay
    mb.idleDisplay.home="{{ line.microbrowser.idle_display.home }}"
    mb.idleDisplay.refresh="{{ line.microbrowser.idle_display.refresh }}"
  />
	<limits
		mb.limits.nodes=""
		mb.limits.cache=""/>

	</microbrowser>
</phone1>